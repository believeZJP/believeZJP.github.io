// http://baijiahao.baidu.com/s?id=1595560392011835418&wfr=spider&for=pc
// -----------公共库-----------------------
.loop( @count )when( @count > 0 ) {
  .mt@{count} {
    margin-top: (5rem * @count);
  }
  .mb@{count} {
    margin-bottom: (5rem * @count);
  }
  .pt@{count} {
    padding-top: (5rem * @count);
  }
  .pb@{count} {
    padding-bottom: (5rem * @count);
  }
  .loop((@count - 1));
}

.loop(10);

// 居中定位
.flexC {
  display: flex;
  align-items: center;
  justify-content: center;
}
// 黑色背景
.black-bg {
  background-color: #000;
}
// -----------------------------------

.red {
  width: 10rem;
  height: 10rem;
  background-color: red;
  .blue {
    width: 4rem;
    height: 4rem;
    background-color: blue;
  }
}

// 第五个案例
.checkbox5,
.checkbox5 .inner,
.checkbox5 .inner .toggle {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.checkbox5 {
  width: 10rem;
  height: 5rem;
  background: linear-gradient(silver, whitesmoke);
  border-radius: 2.5rem;
  // font-size: 4rem;
  .inner {
    width: 8rem;
    height: 3.5rem;
    background: linear-gradient(dimgray, silver);
    border-radius: 2rem;
    box-shadow: inset 0 0 1.5rem rgba(0, 0, 0, 0.5);
    // 圆形按钮
    .toggle {
      width: 3.5rem;
      height: 3.5rem;
      background: linear-gradient(to top, silver, whitesmoke);
      border-radius: 50%;
      box-shadow: 0 0.4rem 0.6rem rgba(0, 0, 0, 0.2);
      position: relative;
      left: -30%;
      transition: 0.5s;
    }
    // 圆形按钮增加立体效果
    .toggle::before {
      content: "";
      position: absolute;
      height: 80%;
      width: 80%;
      background: linear-gradient(whitesmoke, silver);
      border-radius: 50%;
      // 在按钮上写OFF，行高根据父高度计算
      content: "OFF";
      text-align: center;
      line-height: calc(3.5rem * 0.8);
      color: gray;
    }
  }
  // 设置active时的样式
  .inner.active {
    background: linear-gradient(green, limegreen);
    .toggle {
      left: 30%;
    }
    .toggle::before {
      content: "ON";
      color: limegreen;
    }
  }
}

// 6 diamond

// 定义一些基础颜色变量
:root {
  --color1: deepskyblue;
  --color2: steelblue;
  --color3: royalblue;
  --color4: dodgerblue;
}
.diamond6 {
  display: grid;
  width: 10rem;
  // 把span转成田字格
  grid-template-columns: 1fr 1fr;
  transform: rotate(45deg);
  span {
    border-width: 5rem;
    border-style: solid;
    border-color: var(--color1) var(--color2) var(--color3) var(--color4);
  }
  // 转成钻石形状
  span:first-child {
    border-color: transparent var(--color2) var(--color3) transparent;
  }
  // 动画效果加到除第一个以外的元素上
  span:not(:first-child) {
    animation: animate 2s linear infinite;
  }
  // 定义动画效果
  @keyframes animate {
    0% {
      border-color: var(--color1) var(--color2) var(--color3) var(--color4);
    }

    25% {
      border-color: var(--color4) var(--color1) var(--color2) var(--color3);
    }

    50% {
      border-color: var(--color3) var(--color4) var(--color1) var(--color2);
    }

    75% {
      border-color: var(--color2) var(--color3) var(--color4) var(--color1);
    }

    100% {
      border-color: var(--color1) var(--color2) var(--color3) var(--color4);
    }
  }
}

// 7 跑马灯效果
.box7 {
  display: flex;
  .inner {
    width: 20rem;
    height: 10rem;
    line-height: 10rem;
    font-size: 3.2rem;
    font-family: sans-serif;
    font-weight: bold;
    white-space: nowrap;

    //隐藏容器外部内容
    overflow: hidden;
    // 动画效果用到文字上
    span {
      position: absolute;
      animation: marquee 5s linear infinite;
    }
  }
  // 配色
  .inner:first-child {
    background-color: indianred;
    color: darkred;
    // 设置3d效果
    transform-origin: left;
    transform: perspective(30rem) rotateY(-67.3deg);
    // 左侧延迟动画模拟两组连贯运动效果
    span {
      animation-delay: 2.5s;
      left: -100%;
    }
  }
  .inner:last-child {
    background-color: lightcoral;
    color: antiquewhite;
    transform-origin: right;
    transform: perspective(30rem) rotateY(67.3deg);
  }
  // 动画效果
  @keyframes marquee {
    from {
      left: 100%;
    }
    to {
      left: -100%;
    }
  }
}

// 8 电池充电效果模拟
.battery8 {
  width: 6rem;
  height: 3rem;
  color: midnightblue;
  border: 0.5rem solid currentColor;
  border-radius: 0.2rem;
  font-size: 2rem;
  position: relative;

  // 充电电量
  background-image: linear-gradient(to right, #95d799, #95d799);
  background-repeat: no-repeat;
  background-size: 30% 80%;
  background-position: 0.3rem 50%;
  // 添加动画
  animation: charge 5s linear infinite;
  // 将动画改成step形式的
  animation: charge 5s steps(8) infinite;

  // 电池的突起
  &::after {
    content: "";
    position: absolute;
    width: 0.5rem;
    height: 2rem;
    background-color: currentColor;
    top: 0.5rem;
    right: -1rem;
    border-radius: 0 0.2rem 0.2rem 0;
  }

  // 定义动画
  @keyframes charge {
    from {
      background-size: 10% 80%;
    }
    to {
      background-size: 95% 80%;
    }
  }
}

// 9 CSS 创作一种按钮被瞄准的交互特效
.box9 {
  width: 9rem;
  height: 3rem;
  font-size: 0.3rem;
  line-height: 3rem;
  text-align: center;
  letter-spacing: 0.2rem;
  font-family: sans-serif;
  position: relative;
  // 为容器设置模糊到清晰的缓动效果
  filter: blur(2px);
  transition: 0.5s;
  &:hover {
    filter: blur(0.2px);
  }
  // 画出瞄准镜中间的圆圈
  &::after {
    content: "";
    position: absolute;
    height: 3rem;
    width: 3rem;
    border: 1px solid red;
    border-radius: 50%;
    left: 3rem;
    // 默认隐藏
    filter: opacity(0);
  }
  // 设置瞄准动画
  &:hover::after,
  &:hover span:not(:first-child) {
    animation: ani 1s linear infinite alternate;
  }

  span:not(:first-child) {
    position: absolute;
    background-color: red;
    // 默认隐藏
    filter: opacity(0);
  }
  span.top,
  span.bottom {
    width: 1px;
    height: 3rem;
    left: 50%;
  }
  span.top {
    top: -3rem;
  }
  span.bottom {
    bottom: -3rem;
  }
  span.left,
  span.right {
    width: 3rem;
    height: 1px;
    top: 50%;
  }
  span.left {
    left: 0;
  }
  span.right {
    right: 0;
  }
  // 瞄准动画
  @keyframes ani {
    from {
      filter: opacity(0.2);
    }
    to {
      filter: opacity(0.8);
    }
  }
}

// 10 同心圆 loading 加载
.circle10 {
  width: 10rem;
  height: 10rem;
  // 最外层圆的样式
  border-top-color: red;
  border-bottom-color: blue;
  position: relative;
  //   应用动画效果
  animation: animate10 4s ease-in-out infinite alternate;
  //   设置居中，before和after伪元素才会居中
  display: flex;
  align-items: center;
  justify-content: center;
  // 中间一层圆的样式
  &::before {
    width: 75%;
    height: 75%;
    position: absolute;
    border-top-color: orange;
    border-bottom-color: cyan;
    animation-duration: 8s;
    animation: animate10 8s ease-in-out infinite alternate;
  }

  // 最内层样式
  &::after {
    width: 40%;
    height: 40%;
    position: absolute;
    border-top-color: yellow;
    border-bottom-color: limegreen;
    animation-duration: 16s;
    animation: animate10 16s ease-in-out infinite alternate;
  }
  //   提取circle, ::before, ::after的共有样式
  &,
  &::before,
  &::after {
    content: "";
    border-width: 0.4rem;
    border-style: solid;
    border-radius: 50%;
    border-left-color: transparent;
    border-right-color: transparent;
  }
  //   定义动画效果
  @keyframes animate10 {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(1440deg);
    }
  }
}

// 11 荧光圆圈
// :root {
//   --innerRadius: 2rem;
// }
.circle11 {
  // 直接这样定义不生效，但案例中的可以生效
  // --innerRadius: 2rem;
  //   width: calc(var(--innerRadius) * 2);
  //   height: calc(var(--innerRadius) * 2);
  //   width: calc(var(--innerRadius) * 2);
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 5rem 0;
  // 用less语法定义局部变量
  @innerRadius: 2rem;
  width: @innerRadius * 2;
  height: @innerRadius * 2;
  background-color: lime;
  border-radius: 50%;
  //   圆圈
  //   box-shadow: 0 0 0 @innerRadius - 0.4rem black, 0, 0, 0 @innerRadius lime;
  box-shadow: 0 0 0 @innerRadius - 0.4rem black, 0 0 0 @innerRadius lime;

  //   用伪元素::before画出动画用到的圆环
  &::before {
    content: "";
    position: absolute;
    width: @innerRadius*2*2;
    height: @innerRadius*2*2;
    border: 2px solid lime;
    border-radius: 50%;
    // 增加动画
    // animation: pulse11 2s linear infinite;
    // 优化动画-增加渐淡和弹性效果
    animation: pulse11 2s ease-out infinite;
  }
  @keyframes pulse11 {
    from {
      transform: scale(1);
      filter: opacity(0.9);
    }
    to {
      transform: scale(2);
      filter: opacity(0);
    }
  }

  //   用伪元素::after再画一个动的圆环
  &::after {
    content: "";
    position: absolute;
    width: @innerRadius*2*2;
    height: @innerRadius*2*2;
    border: 2px solid lime;
    border-radius: 50%;
    animation: pulse11 2s ease-out infinite;
    animation-delay: 1s;
  }
}

// 12 文字断开效果
.text12 {
  font-size: 5rem;
  font-family: "arial black";
  position: relative;
  // 隐藏文字，只让伪元素显示
  color: transparent;
  // 利用伪元素增加文字
  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    color: brown;
    transition: 0.2s;
  }

  // 左侧文字遮罩
  &::before {
    //去掉辅助颜色
    // background-color: darkgreen;
    clip-path: polygon(0 0, 60% 0, 30% 100%, 0 100%);
  }
  // 右侧文字背景遮罩
  &::after {
    // background-color: darkblue;
    clip-path: polygon(60% 0, 100% 0, 100% 100%, 30% 100%);
  }

  // 鼠标划过文字向两侧侧移
  &:hover::before {
    left: -0.5rem;
    // 增加歪斜效果
    transform: rotate(-5deg);
    // 微调高度
    top: -0.05rem;
  }
  &:hover::after {
    left: 0.5rem;
    transform: rotate(5deg);
    top: 0.05rem;
  }
}

// 14 立体书效果
.books14 {
  // 3本书的布局
  display: flex;
  width: calc(12rem * 3 + 3rem * 2);
  justify-content: space-between;
  margin-top: 6rem;

  .book:nth-child(2) {
    top: -3rem;
  }
  .book:nth-child(3) {
    top: -6rem;
  }
  .book {
    //   书的正面
    width: 12rem;
    height: 18rem;
    background: linear-gradient(navy, deeppink, tomato);
    transform: skewY(-10deg);
    position: relative;
    // 加阴影，使书更立体
    box-shadow: -10px 5px 30px rgba(0, 0, 0, 0.5);
    // 动画
    transition: 0.3s;

    &:hover {
      margin-top: -1.5rem;
    }

    // 书的侧面
    &::before {
      content: "";
      position: absolute;
      width: 1.5rem;
      height: 100%;
      background: linear-gradient(navy, deeppink, tomato);
      top: 0;
      left: -1.5rem;
      transform: skewY(45deg);
      transform-origin: right;
      filter: brightness(0.6);
    }
    // 书的顶面
    &::after {
      content: "";
      position: absolute;
      width: 100%;
      height: 1.5rem;
      background-color: #fff;
      top: -1.5rem;
      left: 0;
      transform-origin: bottom;
      transform: skewX(45deg);
      filter: brightness(0.9);
    }
    // 文字样式,及背景
    span {
      color: whitesmoke;
      font-size: 2.2rem;
      display: block;
      background-color: silver;
      text-align: center;
      height: 8rem;
      margin-top: 5rem;
      padding-top: 2rem;
      box-sizing: border-box;
      text-shadow: -2px 2px 10px rgba(0, 0, 0, 0.3);
      position: absolute;
      width: 100%;

      //   文字背景的侧边栏
      &::before {
        content: "";
        position: absolute;
        width: 1.5rem;
        height: 100%;
        background: silver;
        top: 0;
        left: -1.5rem;
        transform-origin: right;
        transform: skewY(45deg);
        filter: brightness(0.6);
      }

      //   文字底下增加一行小字
      &::after {
        content: "development";
        display: block;
        font-size: 1rem;
      }
    }

    // 给3本书配色
    &.html span {
      &,
      &::before {
        background: orange;
      }
      &::after {
        content: "<development />";
      }
    }
    &.css span {
      &,
      &::before {
        background: yellowgreen;
      }
      &::after {
        content: ".development::";
      }
    }
    &.js span {
      &,
      &::before {
        background: royalblue;
      }
      &::after {
        content: "{development}";
      }
    }
  }
}

// 15 css条形图
.card15 {
  // 卡片布局
  width: 40rem;
  background: linear-gradient(#333, dimgray);
  box-sizing: border-box;
  padding: 2rem;
  color: white;
  letter-spacing: 0.1rem;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.5);

  h2 {
    text-transform: uppercase;
    text-align: center;
  }
  .skill {
    height: 5rem;
    transition: 0.25s;
    span {
      display: block;
    }
    .level {
      transform: translateY(-1rem);
      text-align: right;
      position: relative;
      // 伪布局画条形图
      &::before,
      &::after {
        content: "";
        position: absolute;
        top: 1.2rem;
        left: 0;
        width: 100%;
        height: 100%;
      }
      &::before {
        border: 1px solid mediumspringgreen;
        border-radius: 0.2rem;
        height: 105%;
      }
      &::after {
        background-image: linear-gradient(
          to right,
          mediumspringgreen,
          mediumspringgreen
        );
        background-repeat: no-repeat;
        background-position: top 0.25rem left 0.1rem;
      }
    }
    // 设置条形图的填仓比例
    &.html {
      .level::after {
        background-size: 90% 1rem;
      }
    }
    &.js {
      .level::after {
        background-size: 80% 1rem;
      }
    }
    &.css {
      .level::after {
        background-size: 95% 1rem;
      }
    }
    &.svg {
      .level::after {
        background-size: 60% 1rem;
      }
    }
    &.canvas {
      .level::after {
        background-size: 75% 1rem;
      }
    }
    // 增加hover效果
    &:hover {
      box-shadow: 8px 5px 20px 5px cyan;
      transform: translateY(-10px);
      background-size: 75% 1rem;
    }
  }
}
// 16 渐变色动画边框
.box16 {
  color: #fff;
  font-size: 2.5rem;
  width: 20rem;
  height: 10rem;
  line-height: 2.5rem;
  background: #111;
  text-align: center;
  border-radius: 0.5rem;
  position: relative;
  // 增加文字动画
  animation: animate16_text 2s linear infinite alternate;
  // 用伪元素增加背板
  &::after {
    content: "";
    position: absolute;
    width: 110%;
    height: 120%;
    z-index: -1;
    border-radius: 0.5rem;
    background: orange;
    background-size: 300%;
    background-image: linear-gradient(
      60deg,
      aquamarine,
      cornflowerblue,
      goldenrod,
      hotpink,
      salmon,
      lightgreen,
      sandybrown,
      violet
    );
    animation: animate16_bg 5s infinite;
  }
  // 设置动画
  @keyframes animate16_bg {
    0%,
    100% {
      background-position: 0%, 50%;
    }
    50% {
      background-position: 100%, 50%;
    }
  }
  @keyframes animate16_text {
    from {
      color: lime;
    }
    to {
      color: yellow;
    }
  }
}
// 17 同心矩形旋转
.loader17 {
  width: 20rem;
  height: 20rem;
  font-size: 28px;
  position: relative;
  span {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    box-sizing: border-box;
    border: 0.5rem solid;
    border-color: white rgba(100%, 100%, 100%, 0.2); // 分别给span不同尺寸
    .loop17( @count )when( @count > 0 ) {
      &:nth-child(@{count}) {
        width: calc(20% + 20% * (5-@count));
        height: calc(20% + 20% * (5-@count));
        animation-delay: calc(0.2s * (5 - @count));
      }
      .loop17(@count - 1);
    }
    .loop17(5);
    // 增加动画
    animation: animate17 5s ease-in-out infinite alternate;
  }
  // 增加颜色动画效果
  @keyframes animate17 {
    0% {
      /* red */
      background-color: rgba(100%, 0%, 0%, 0.3);
      transform: rotate(0deg);
    }
    25% {
      /* yellow */
      background-color: rgba(100%, 100%, 0%, 0.3);
    }
    50% {
      /* green */
      background-color: rgba(0%, 100%, 0%, 0.3);
    }
    75% {
      /* blue */
      background-color: rgba(0%, 0%, 100%, 0.3);
    }
    100% {
      /* purple */
      background-color: rgba(100%, 0%, 100%, 0.3);
      transform: rotate(720deg);
    }
  }
}
// 18 404变non
// 整体布局
.four-zf-con18 {
  p {
    width: 10rem;
    height: 10rem;
    border: 1px solid white;
    display: inline-block;
    margin: 1rem;
    position: relative;
    // 设置笔画共有属性
    span {
      position: absolute;
      box-sizing: border-box;
      filter: opacity(0.8);
      transition: 0.3s;
    }
  }
  .four span {
    // 画出数字4的笔画
    &:nth-child(1) {
      width: 20%;
      height: 80%;
      left: 10%;
      background-color: yellowgreen;
    }
    &:nth-child(2) {
      width: 100%;
      height: 20%;
      bottom: 30%;
      background-color: turquoise;
    }
    &:nth-child(3) {
      width: 20%;
      height: 100%;
      right: 10%;
      background-color: pink;
    }
  }
  //   数字0笔画
  .zero span {
    &:nth-child(1) {
      width: 20%;
      height: 100%;
      left: 10%;
      background-color: skyblue;
    }
    &:nth-child(2) {
      width: 100%;
      height: 20%;
      top: 10%;
      background-color: plum;
    }
    &:nth-child(3) {
      width: 20%;
      height: 100%;
      right: 10%;
      background-color: lightcoral;
    }
    &:nth-child(4) {
      width: 100%;
      height: 20%;
      bottom: 10%;
      background-color: peachpuff;
    }
  }
  // 划过数字时笔画变化效果
  &:hover {
    p span {
      border: 1px solid black;
      background-color: transparent !important;
      filter: opacity(1);
      transition: 0.3s;
    }
    .four span {
      &:nth-child(1) {
        left: 0;
        top: 20%;
      }
      &:nth-child(2) {
        top: 0;
      }
      &:nth-child(3) {
        right: 0;
      }
    }
    .zero span {
      &:nth-child(1) {
        left: 0;
      }
      &:nth-child(2) {
        top: 0;
      }
      &:nth-child(3) {
        right: 0;
      }
      &:nth-child(4) {
        bottom: 0;
      }
    }
  }
}
// 19 削铁如泥菜单
.menu19 {
  padding: 0;
  flex-direction: column;
  li {
    margin: 0.5rem;
    list-style-type: none;
    font-size: 2rem;
    font-weight: bold;
    text-transform: uppercase;
    text-align: center;
    // line-height: 1rem;
    width: 16rem; // 文字的切割线
    border-top: 1px solid transparent; // 隐藏文本
    color: transparent;
    position: relative;
    transition: 0.3s; // 划动效果
    &:hover {
      border-top: 1px solid yellow;
      &::before,
      &::after {
        color: yellow;
        transition: 0.3s left ease-out;
        transition-delay: 0.2s;
      }
    }
    // 用伪元素增加文本
    &::before,
    &::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      color: silver;
      // 伪元素文本向上移，竖跨分割线
      top: -1.4rem;
      //   文字增加动画效果
      transition: 0.3s ease-out;
    }
    // 用遮罩切出分割线上下二部分的文本
    &::before {
      clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
    }
    &::after {
      clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0 100%);
    }
    // 设置奇偶样式
    &:nth-child(odd):hover::before,
    &:nth-child(even):hover::after {
      left: -0.15rem;
    }
    &:nth-child(even):hover::before,
    &:nth-child(odd):hover::after {
      left: 0.15rem;
    }
  }
}
// 20 心形
.heart20 {
  display: grid;
  grid-template-columns: repeat(9, 1fr);
  grid-gap: 2px;
  & > * {
    width: 2rem;
    height: 2rem;
    border-radius: 0.1rem;
    font-size: 30px;
  }
  dot {
    filter: opacity(0);
    animation: ani20 5s ease-out infinite;
    background: red;
    // 各像素不同时间进场，增加动画效果
 // 因为这段代码自动格式化时把 3s, 格式化成了3 s, 无法正常解析
    &:nth-of-type(2n) {
      animation-delay: 0.2s;
    }
    &:nth-of-type(3n) {
      animation-delay: 0.3s;
    }
    &:nth-of-type(4n) {
      animation-delay: 0.4s;
    }
    &:nth-of-type(5n) {
      animation-delay: 0.5s;
    }
    &:nth-of-type(6n) {
      animation-delay: 0.6s;
    }
    &:nth-of-type(7n) {
      animation-delay: 0.7s;
    }
    &:nth-of-type(8n) {
      animation-delay: 0.8s;
    }
    &:nth-of-type(9n) {
      animation-delay: 0.9s;
    }
    &:nth-of-type(10n) {
      animation-delay: 1s;
    }
    &:nth-of-type(11n) {
      animation-delay: 1.1s;
    }
  }
  // 淡入淡出动画
  @keyframes ani20 {
    0% {
      filter: opacity(0);
      transform: translateY(-10rem);
    }
    25% {
      filter: opacity(1);
      transform: translateY(0);
    }
    75% {
      filter: opacity(1);
      transform: translateY(0);
    }
    100% {
      filter: opacity(0);
      transform: translateY(10rem);
    }
  }
}
// 21 css文本滑动特效
.box21 {
  p {
    width: 40rem;
    height: 2.5rem;
    color: gold;
    font-size: 24px;
    border: 2px solid gold;
    line-height: 2.5rem;
    text-align: center;
    border-radius: 10px;
    letter-spacing: 2px;
    word-spacing: 2px;
    box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);
    position: relative;
    overflow: hidden; // span都为100%
    span {
      position: absolute;
      width: 100%;
      left: 0;
      top: 0;
      transition: 0.5s ease-out;
    }
    .question {
      left: 0;
    }
    // 设置答案样式
    .answer {
      color: whitesmoke;
      font-size: 1.1rem;
      text-transform: uppercase;
      background: rgba(0, 0, 0, 0.1);
      left: -100%;
    }
    &:hover {
      .question {
        left: 100%;
      }
      .answer {
        left: 0;
      }
    }
  }
  // 用伪元素添加背景
  h1 {
    position: relative;
    &::after {
      content: "?";
      position: absolute;
      font-size: 25rem;
      transform: rotate(15deg);
      color: cyan;
      filter: opacity(0.3);
      text-shadow: 10px 10px 10px rgba(0, 0, 0, 0.2);
      top: -8rem;
      left: 15rem;
    }
  }
}
// 22彩虹文字效果
.rainbow22 {
  // color: #fff;
  font-size: 10rem;
  text-transform: uppercase;
  font-weight: bold;
  // line-height: 1rem;
  position: relative;
  // 用伪元素增加图层
  span {
    &::before,
    &::after {
      content: attr(data-text);
      position: absolute;
      top: 0;
      left: 0;
      overflow: hidden;
      animation: animate22 0.8s infinite alternate;
      filter: opacity(0);
    }
    &:nth-child(1) {
      &::before {
        color: orchid;
        z-index: 1;
        height: calc(100%-10% * 1);
      }
      &::after {
        color: mediumpurple;
        z-index: 2;
        height: calc(100% - 10% * 2);
      }
    }
    &:nth-child(2) {
      &::before {
        color: deepskyblue;
        z-index: 3;
        height: calc(100% - 10% * 3);
      }
      &::after {
        color: cyan;
        z-index: 4;
        height: calc(100% - 10% * 4);
      }
    }
    &:nth-child(3) {
      &::before {
        color: mediumspringgreen;
        z-index: 5;
        height: calc(100% - 10% * 5);
      }
      &::after {
        color: yellow;
        z-index: 6;
        height: calc(100% - 10% * 6);
      }
    }
    &:nth-child(4) {
      &::before {
        color: gold;
        z-index: 7;
        height: calc(100% - 10% * 7);
      }
      &::after {
        color: tomato;
        z-index: 8;
        height: calc(100% - 10% * 8);
      }
    }
  }
  @keyframes animate22 {
    from {
      filter: opacity(0);
    }
    to {
      filter: opacity(1);
    }
  }
}
